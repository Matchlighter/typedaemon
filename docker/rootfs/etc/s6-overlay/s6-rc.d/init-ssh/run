#!/command/with-contenv sh
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Community Add-on: Advanced SSH & Web Terminal
# Configures the SSH daemon
# ==============================================================================
readonly SSH_AUTHORIZED_KEYS_PATH=/etc/ssh/authorized_keys
readonly SSH_CONFIG_PATH=/etc/ssh/sshd_config
readonly SSH_HOST_ED25519_KEY="$TYPEDAEMON_CONFIG/.typedaemon/ssh_host_ed25519_key"
readonly SSH_HOST_RSA_KEY="$TYPEDAEMON_CONFIG/.typedaemon/ssh_host_rsa_key"
# declare password
# declare username

username=root

if [ ! -f "$SSH_HOST_RSA_KEY" ]; then
    ssh-keygen -t rsa -f "${SSH_HOST_RSA_KEY}" -N ""
fi
cp "${SSH_HOST_RSA_KEY}" "/etc/ssh/ssh_host_rsa_key"

if [ ! -f "$SSH_HOST_ED25519_KEY" ]; then
    ssh-keygen -t ed25519 -f "${SSH_HOST_ED25519_KEY}" -N ""
fi
cp "${SSH_HOST_ED25519_KEY}" "/etc/ssh/ssh_host_ed25519_key"


# username=$(bashio::config 'ssh.username')
# username=$(bashio::string.lower "${username}")

# # We need to set a password for the user account
# if bashio::config.has_value 'ssh.password'; then
#     password=$(bashio::config 'ssh.password')
# else
#     # Use a random password in case none is set
#     password=$(pwgen 64 1)
# fi
# chpasswd <<< "${username}:${password}" 2&> /dev/null

key_file="$TYPEDAEMON_CONFIG/.typedaemon/connection_key"

if [ ! -f "$key_file" ]; then
    ssh-keygen -b 2048 -t rsa -f "$key_file" -q -N ""
fi

cat "$key_file.pub" > "${SSH_AUTHORIZED_KEYS_PATH}"
chmod 777 "$key_file"
mkdir -p /root/.ssh
cp "${SSH_AUTHORIZED_KEYS_PATH}" "/root/.ssh/authorized_keys"

echo "TD_CONNECTION_MODE=SSH" > "$TYPEDAEMON_CONFIG/.typedaemon/connection_params"

# Sets up the authorized SSH keys
# if bashio::config.has_value 'ssh.authorized_keys'; then
#     while read -r key; do
#         echo "${key}" >> "${SSH_AUTHORIZED_KEYS_PATH}"
#     done <<< "$(bashio::config 'ssh.authorized_keys')"
# fi

# SFTP access
# sed -i '/Subsystem sftp/s/^#//g' "${SSH_CONFIG_PATH}"

# Change Port
sed -i "s/#Port\\ .*/Port\\ 7722/" "${SSH_CONFIG_PATH}"

# Allow specified user to log in
sed -i "s/PermitRootLogin\\ .*/PermitRootLogin\\ yes/" "${SSH_CONFIG_PATH}"

# Enable Agent forwarding
sed -i "s/AllowAgentForwarding.*/AllowAgentForwarding\\ yes/" "${SSH_CONFIG_PATH}"

# Allow remote port forwarding
sed -i "s/GatewayPorts.*/GatewayPorts\\ yes/" "${SSH_CONFIG_PATH}"

# Allow TCP forewarding
sed -i "s/AllowTcpForwarding.*/AllowTcpForwarding\\ yes/" "${SSH_CONFIG_PATH}"

echo "ListenAddress 127.0.0.1" >> "${SSH_CONFIG_PATH}"
