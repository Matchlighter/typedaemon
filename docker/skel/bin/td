#!/bin/bash

findconfig() {
  if [ -f "$1" ]; then
    printf '%s\n' "${PWD%/}/$1"
  elif [ "$PWD" = / ]; then
    false
  else
    # a subshell so that we don't affect the caller's $PWD
    (cd .. && findconfig "$1")
  fi
}

findsocket() {
  if [ -S "$1" ]; then
    printf '%s\n' "${PWD%/}/$1"
  elif [ "$PWD" = / ]; then
    false
  else
    # a subshell so that we don't affect the caller's $PWD
    (cd .. && findsocket "$1")
  fi
}

function findexec() {
    if [ -x "$(command -v $1)" ]; then
        echo "$(which "$1")"
    else
        echo "$(findconfig "./typedaemon/bin/$1")"
    fi
}

conn_params="$(findconfig .typedaemon/connection_params)"

source "$conn_params"

if [ "$TD_CONNECTION_MODE" = "SSH" ]; then
  socket="$(findsocket .typedaemon/ssh_sock)"
  proxy_cmd=""

  if [ -x "$(command -v nc)" ]; then
    proxy_cmd="nc -U $socket"
  elif [ -x "$(command -v socat)" ]; then
    proxy_cmd="socat - UNIX-CLIENT:$socket"
  else
    echo "socat or netcat must be installed"
    exit 1
  fi

  exec "ssh" -o StrictHostKeyChecking=no -i $(findconfig .typedaemon/connection_key) -o "ProxyCommand $proxy_cmd" root@td
elif [ "$TD_CONNECTION_MODE" = "DOCKER" ]; then
  exec docker run --rm -it -v $PWD:/config typedaemon td "$@"
elif [ -x "$(command -v td)" ]; then
  exec td "$@"
fi
